import tensorflow as tf
from tensorflow import keras
from sklearn.model_selection import train_test_split
import pandas as pd

import pandas as pd
import numpy as np
df=pd.read_csv("C:/Users/SNEHALATHA/Downloads/archive (18).zip")
df

x=df.drop('MEDV',axis=1)
y=df[['MEDV']]

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

model = keras.Sequential()
model.add(keras.layers.Dense(10, activation='relu', input_shape=(x_train.shape[1],)))
model.add(keras.layers.Dense(1))

model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mean_absolute_error'])

history=model.fit(x_train,y_train,epochs=20)

test_data=np.array([6.575,4.98,15.3])
print(model.predict(test_data.reshape(1,3),batch_size=1))

history.history.keys()

import matplotlib.pyplot as plt
plt.plot(history.history['loss'])
plt.show()

plt.plot(history.history['mean_absolute_error'])
plt.show()

test_predictions=model.predict(x_test)

mse,mae=model.evaluate(x_test,y_test)
print("mean_squarred_error",mse)
print("mean_absolute_error",mae)

print("Predicted values=",test_predictions)

print("Real values=",y_test)

